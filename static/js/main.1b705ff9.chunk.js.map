{"version":3,"sources":["components/Comment.js","components/DropDown.js","components/Display.js","App.js","reportWebVitals.js","index.js"],"names":["Comment","className","onClick","this","props","view","data","neighborhood_name","React","Component","DropDown","state","current","allCity","handleView","preventDefault","handleMain","target","innerText","setState","finallList","i","allCities","length","push","properties","map","p","Display","comment","allComments","status","edit","handleChange","e","name","value","handleSubmit","newList","handleDelete","arg","handleEdit","temp","median_age","median_income","unemployment","homeowners","total_population","poverty_level","high_school_grad","identifies_as_speaking_english_less_well","type","placeholder","onChange","App","currentView","AllViews","handleData","fetch","then","resp","json","console","log","result","denverdata","features","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b705ff9.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Comment extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t\n                <p onClick= {this.props.view}> {this.props.data.neighborhood_name}</p>\n\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component } from \"react\";\nimport Comment from \"./Comment\";\n\n\nexport default class DropDown extends Component {\n\n\n    state = {\n        current: '',\n        allCity: []\n    }\n    componentDidMount(){\n\n    }\n   \n\n    handleView = (data) => {\n        \n        data.preventDefault();\n        this.props.handleMain(data.target.innerText)\n        this.setState({\n            current: data.target.innerText \n        })\n\n        \n        \n\n\n        \n\n    }\n\n\n    \n    \n    \n    render() {\n        let finallList = []\n        for(let i = 0; i < this.props.allCities.length ; i++){\n            finallList.push(this.props.allCities[i].properties)\n        }\n        \n        \n\t\treturn (\n            <div className= 'list'>\n                <h1 >Neighborhoods</h1>\n                {\n                    finallList.map((p) => {\n                        \n                       return  <Comment view = {this.handleView} data = {p}/> \n                       \n                 })\n                }\n          \n            </div>\n             \n            \n            \n\t\t)\n\t}\n}","import React, { Component } from \"react\";\n\nexport default class Display extends Component {\n\n\n\n    state = {\n        comment: '',\n        allComments: [],\n        status: false,\n        edit:''\n    }\n    \n    handleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let newList = [...this.state.allComments,this.state.comment]\n        \n        this.setState({\n        allComments: newList,\n        comment: ''\n\n\n        })\n    }\n\n    handleDelete = (arg) =>{\n\n        let newList = []\n        for(let i = 0 ; i < this.state.allComments.length ; i++){\n                if(arg !=this.state.allComments[i] ){\n                    newList.push(this.state.allComments[i])\n                }\n            \n        }\n        this.setState({\n            allComments: newList\n        })\n\n    }\n\n    handleEdit = (arg) =>{\n\n\n\n        let temp = []\n\n        for(let i = 0; i < this.state.allComments.length; i++){\n            if(this.state.allComments[i] == arg){\n                temp.push(this.state.edit)\n            }\n            else{\n                temp.push(this.state.allComments[i])\n\n            }\n        }\n        this.setState({\n            allComments: temp,\n            edit: ''\n        })\n\n    }\n\n    \n\n\n    \n\n    \n    \n    render() {\n        \n\n\t\treturn (\n            <div>\n                <h1 className= 'city'>Current Viewing City</h1>\n                {\n                this.props.view && \n                <div className = 'dataset'>\n                        <p>{this.props.view.neighborhood_name}</p>\n                        <p> Median Age: {this.props.view.median_age}</p>\n                        <p> Median Income: {this.props.view.median_income}</p>\n                        <p> Unemployment: {this.props.view.unemployment}</p>\n\n                        <p> Homeowners: {this.props.view.homeowners}</p>\n                        <p> Total Population: {this.props.view.total_population}</p>\n                        <p> Poverty Level: {this.props.view.poverty_level}</p>\n\n\n                        <p> High School Grads: {this.props.view.high_school_grad}</p>\n                        <p> Total Renters: {this.props.view.high_school_grad}</p>\n                        <p> Identify Speaking English well: {this.props.view.identifies_as_speaking_english_less_well}</p>\n\n\n                \n                </div>\n\n\n\n                \n                }\n\n\n                {\n                  this.state.allComments.map((p) => {\n                  \n                  return  <div> \n                             <p> {p} </p> \n                             <button onClick = {() => this.handleEdit(p)}> Edit</button>  \n                             <button onClick = {() => this.handleDelete(p)}> Delete</button>      \n                         \n                         </div>\n                       \n                  })\n                }\n\n                <form>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"comment\"\n\t\t\t\t\t\tplaceholder=\"Place Comments Here\"\n\t\t\t\t\t\tvalue={this.state.comment}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={this.handleSubmit}> Submit New Note </button>\n\t\t\t\t</form>\n                {\n                \n                    <div>\n                        <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"edit\"\n\t\t\t\t\t\tplaceholder=\"Edit Note Here\"\n                        value={this.state.edit}\n                        onChange={this.handleChange}\t/>\n\n\n                    </div>\n                }\n            </div>\n             \n            \n            \n\t\t)\n\t}\n}","import React from \"react\";\nimport './App.css';\nimport * as denverdata from \"./denver_mapping_data.json\";\nimport DropDown from \"./components/DropDown\";\nimport Display from \"./components/Display\";\n\n\n\n\nclass App extends React.Component {\n\n  state = {\n    currentView: [],\n    AllViews: {}\n  }\n  handleData = (arg) => {\n\t\tfetch(\"denver_mapping_data.geojson\")\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data)\n\t\t\t});\n  };\n\n  handleMain = (arg) => {\n\n\n        let result = {}\n        for(let i = 0; i < this.state.AllViews.length ; i++){\n            if(this.state.AllViews[i].properties.neighborhood_name == arg){\n              result = this.state.AllViews[i].properties\n            }\n        }\n        console.log(result)\n\n        \n\n\n    this.setState({\n      currentView: result\n    })\n  \n    \n  }\n  \n  componentDidMount() {\n    this.setState({\n      AllViews: denverdata.default.features\n    })\n\n  }\n\n  \n  render(){\n\n    return (\n      <div className='App'>\n        <h1 className='header'>\n          Welcome To Denver Data!\n        </h1>\n        <DropDown  handleMain = {this.handleMain} allCities = {this.state.AllViews}/>\n        <Display view= {this.state.currentView}/>\n\n\n      </div>\n      \n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}